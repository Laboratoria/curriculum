diff --git a/config.js b/config.js
index 58b4b6e..330d1c8 100644
--- a/config.js
+++ b/config.js
@@ -1,5 +1,5 @@
 exports.port = process.argv[2] || process.env.PORT || 8080;
-exports.dbUrl = process.env.DB_URL || 'mongodb://localhost:27017/test';
+exports.dbUrl = process.env.MONGO_URL || process.env.DB_URL || 'mongodb://127.0.0.1:27017/test';
 exports.secret = process.env.JWT_SECRET || 'esta-es-la-api-burger-queen';
 exports.adminEmail = process.env.ADMIN_EMAIL || 'admin@localhost';
 exports.adminPassword = process.env.ADMIN_PASSWORD || 'changeme';
diff --git a/e2e/globalSetup.js b/e2e/globalSetup.js
index 46ad006..e8953d9 100644
--- a/e2e/globalSetup.js
+++ b/e2e/globalSetup.js
@@ -1,6 +1,9 @@
 const path = require('path');
 const { spawn } = require('child_process');
 const kill = require('tree-kill');
+const { MongoClient } = require('mongodb');
+
+const mongoGlobalSetup = require("@shelf/jest-mongodb/lib/setup");
 
 const config = require('../config');
 
@@ -105,42 +108,47 @@ module.exports = () => new Promise((resolve, reject) => {
     return resolve();
   }
 
-  // TODO: Configurar DB de tests 
+  mongoGlobalSetup({rootDir: __dirname}).then(async () => {
 
-  console.info('Starting local server...');
+    console.info('\n Starting local server...');
 
-  const child = spawn(/^win/.test(process.platform) ? 'npm.cmd' : 'npm', ['start', process.env.PORT || 8888], {
-    cwd: path.resolve(__dirname, '../'),
-    stdio: ['ignore', 'pipe', 'pipe'],
-  });
+    const child = spawn(/^win/.test(process.platform) ? 'npm.cmd' : 'npm', ['start', port],
+      {
+        cwd: path.resolve(__dirname, "../"),
+        stdio: ["ignore", "pipe", "pipe"],
+        env: { PATH: process.env.PATH, MONGO_URL: process.env.MONGO_URL }
+      }
+    );
 
-  Object.assign(__e2e, { childProcessPid: child.pid });
+    Object.assign(__e2e, { childProcessPid: child.pid });
 
-  child.stdout.on('data', (chunk) => {
-    console.info(`\x1b[34m${chunk.toString()}\x1b[0m`);
-  });
+    child.stdout.on('data', (chunk) => {
+      console.info(`\x1b[34m${chunk.toString()}\x1b[0m`);
+    });
 
-  child.stderr.on('data', (chunk) => {
-    const str = chunk.toString();
-    if (/DeprecationWarning/.test(str)) {
-      return;
-    }
-    console.error('child::stderr', str);
-  });
-
-  process.on('uncaughtException', (err) => {
-    console.error('UncaughtException!');
-    console.error(err);
-    kill(child.pid, 'SIGKILL', () => process.exit(1));
-  });
-
-  waitForServerToBeReady()
-    .then(checkAdminCredentials)
-    .then(createTestUser)
-    .then(resolve)
-    .catch((err) => {
-      kill(child.pid, 'SIGKILL', () => reject(err));
+    child.stderr.on('data', (chunk) => {
+      const str = chunk.toString();
+      if (/DeprecationWarning/.test(str)) {
+        return;
+      }
+      console.error('child::stderr', str);
     });
+
+    process.on('uncaughtException', (err) => {
+      console.error('UncaughtException!');
+      console.error(err);
+      kill(child.pid, 'SIGKILL', () => process.exit(1));
+    });
+
+    waitForServerToBeReady()
+      .then(checkAdminCredentials)
+      .then(createTestUser)
+      .then(resolve)
+      .catch((err) => {
+        console.log('there was an error');
+        kill(child.pid, 'SIGKILL', () => reject(err));
+      })
+    }).catch((error)=> console.log(error));
 });
 
 // Export globals - ugly... :-(
diff --git a/e2e/jest.config.js b/e2e/jest.config.js
new file mode 100644
index 0000000..38d8cb3
--- /dev/null
+++ b/e2e/jest.config.js
@@ -0,0 +1,3 @@
+module.exports = {
+  preset: '@shelf/jest-mongodb',
+};
diff --git a/jest-mongodb-config.js b/jest-mongodb-config.js
new file mode 100644
index 0000000..283bc56
--- /dev/null
+++ b/jest-mongodb-config.js
@@ -0,0 +1,15 @@
+// Para usar con MongoDB y jest-mongodb
+// https://www.npmjs.com/package/@shelf/jest-mongodb
+
+module.exports = {
+  mongodbMemoryServerOptions: {
+    instance: {
+      dbName: 'jest',
+    },
+    binary: {
+      version: '4.0.3',
+      skipMD5: true,
+    },
+    autoStart: false,
+  },
+};
diff --git a/package.json b/package.json
index 8472c48..5e7a6c2 100644
--- a/package.json
+++ b/package.json
@@ -17,10 +17,12 @@
     "docs:deploy": "rm -rf docs && npm run docs:generate && gh-pages -d docs"
   },
   "dependencies": {
+    "@shelf/jest-mongodb": "^4.1.7",
     "bcrypt": "^5.0.1",
     "body-parser": "^1.19.0",
     "express": "^4.17.1",
-    "jsonwebtoken": "^8.5.1"
+    "jsonwebtoken": "^8.5.1",
+    "mongodb-memory-server": "^8.12.2"
   },
   "devDependencies": {
     "docdash": "^1.2.0",
