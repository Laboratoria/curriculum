{
  "slug": "html",
  "createdAt": "2022-04-05T18:51:05.653Z",
  "cover": null,
  "thumb": null,
  "title": "HTML",
  "description": "",
  "tags": {
    "secondary": {},
    "primary": {}
  },
  "targetAudience": "<p>Este curso está dirigido a personas <em>sin</em> conocimientos previos de programación\nque tienen el interés de aventurarse al mundo del código. Será tu primer paso en\nla ruta de aprendizaje.</p>\n",
  "dependencies": "<p>Ningún conocimiento previo de programación es necesario para completar este\ncurso. Está diseñado para principiantes.</p>\n",
  "learningObjectives": "<ul>\n<li>Conocer los principales elementos y etiquetas HTML</li>\n<li>Profundizar en los elementos HTML</li>\n<li>Conocer qué son y para qué sirven los atributos de elementos HTML</li>\n<li>Conocer elementos HTML semánticos</li>\n</ul>\n",
  "product": "",
  "syllabus": {
    "01-intro": {
      "title": "Tu primera página web",
      "bonus": false,
      "description": "<p>En esta unidad crearás tu primera página web.</p>\n",
      "parts": {
        "00-opening": {
          "title": "Opening",
          "type": "read",
          "format": "self-paced",
          "duration": 15,
          "body": "<h2 id=\"objetivos-de-aprendizaje\">Objetivos de aprendizaje</h2>\n<ul>\n<li>Crear tu primera página web</li>\n<li>Aprender a darle dinamismo a una web utilizando JavaScript.</li>\n</ul>\n<h2 id=\"guía-de-preguntas-y-conceptos-clave\">Guía de preguntas y conceptos clave</h2>\n<p>Cuando empiezas a estudiar un tema nuevo, es útil tener una idea sobre los\nconceptos más importantes de lo que vas a aprender y de los temas centrales\nque debes prestar particular atención.</p>\n<p>A continuación te presentamos una serie de preguntas que debes ser capaz de\nresponder al terminar esta unidad. Utiliza estas preguntas como guía para\norientar tus esfuerzos de aprendizaje. Regresa a ellas constantemente a\nmedida que avanzas para validar que estás avanzando en la dirección correcta.\nQue te sirva como un \"checklist\" que vas marcando a medida que vas progresando.</p>\n<ul>\n<li>¿Cuál es la estructura básica (elementos principales) de un archivo <code>html</code>?</li>\n<li>¿Cómo vinculas tu <code>html</code> con tu <code>js</code>?\n¿Qué convenciones debes seguir al hacer esto? ¿Por qué?</li>\n<li>¿Por qué se dice que el <code>html</code> es anidado? Haz un dibujo</li>\n<li>Piensa en un par de ejemplos de buenas prácticas de código <code>html</code></li>\n</ul>\n",
          "order": 0,
          "durationString": "15min"
        },
        "01-your-first-website": {
          "title": "Tu primer sitio web",
          "type": "read",
          "format": "self-paced",
          "duration": 20,
          "embeds": [
            {
              "type": "video",
              "provider": "youtube",
              "href": "https://www.youtube.com/watch?v=wQKn1fh3pAM",
              "id": "wQKn1fh3pAM"
            },
            {
              "type": "video",
              "provider": "youtube",
              "href": "https://www.youtube.com/watch?v=QP9FF9eoh-k",
              "id": "QP9FF9eoh-k"
            },
            {
              "type": "video",
              "provider": "youtube",
              "href": "https://www.youtube.com/watch?v=SSiWsDoK4GE",
              "id": "SSiWsDoK4GE"
            }
          ],
          "body": "<p>El texto a continuación es una traducción al español, con ciertos ajustes, del\ncapítulo 5 de <a href=\"http://pepa.holla.cz/wp-content/uploads/2015/11/JavaScript-for-Kids.pdf\" target=\"_blank\">JavaScript for kids</a>,\nNick Morgan, 2015; y de <a href=\"http://eloquentjavascript.net/\" target=\"_blank\">Eloquent JavaScript</a>,\nde Marijn Haverbeke, 2014.</p>\n<h2 id=\"html-hypertext-markup-language\">HTML: HyperText Markup Language</h2>\n<p>HTML (HyperText Markup Language) es el lenguaje utilizado para crear la\nestructura de un sitio web. Para crear este sitio, se empieza creando un\ndocumento en formato HTML. Esto es muy parecido a crear un documento con formato\nword, excel o powerpoint.</p>\n<p>Un documento HTML simple se ve así (no te asustes si no entiendes todo lo que\ndice, te lo explicaremos paso a paso más abajo):</p>\n<pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Mi primera web&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;¡Hola Mundo!&lt;/h1&gt;\n    &lt;p&gt;Esta es mi primera web&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>Al abrir este mismo documento HTML en un navegador (como Chrome), se ve lo\nsiguiente:</p>\n<p><img src=\"https://user-images.githubusercontent.com/25912510/35747209-7899e2de-0817-11e8-9ae7-fcfe96122470.png\" alt=\"Vista en Chrome\"></p>\n<p>El navegador \"lee\" el archivo HTML (el texto y las etiquetas que están adentro)\ny las presenta según las reglas del lenguaje. Por ejemplo, los textos que están\ndentro de las etiquetas <code>&lt;h1&gt; &lt;/h1&gt;</code> son considerados encabezados o titulares,\nmientras que los textos dentro de las etiquetas <code>&lt;p&gt; &lt;/p&gt;</code> son considerados\npárrafos. Por eso, el texto <em>¡Hola Mundo!</em> se visualiza mucho más grande que el\ntexto <em>Esta es mi primera web.</em></p>\n<h2 id=\"crea-tu-primera-web\">Crea tu primera web</h2>\n<p>Como ya lo dijimos, <em><strong>la mejor manera de aprender es haciendo</strong></em>. Por eso, es\nhora de que tú misma crees una web y aprendas HTML.</p>\n<p>Michelle te explica por qué necesitarás un editor de texto para los ejercicios:</p>\n<p><div class=\"iframe-container\"><iframe width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/wQKn1fh3pAM?autoplay=0\" frameborder=\"0\" gesture=\"media\" allow=\"encrypted-media\" allowfullscreen=\"true\"></iframe></div></p>\n<p>En el siguiente video, Michelle te guiará a través de los siguientes pasos para\nque crees tu primera web:</p>\n<ol>\n<li>Descarga Atom, un editor de texto: <a href=\"https://atom.io/\" target=\"_blank\">Descargar</a>, hay versión\npara Mac y Windows. Si deseas puedes descargar otro editor de texto llamado\nVisual Studio Code, ten en cuenta que las explicaciones que te dará Michelle\nestarán en Atom pero tú podrás hacer lo mismo en Visual Studio Code.\n<a href=\"https://code.visualstudio.com/\" target=\"_blank\">Descarga VSCode aquí</a></li>\n<li>Crea un documento HTML llamado <code>index.html</code></li>\n<li>Agrega algunos elementos al documento HTML (por ejemplo: un título y un\npárrafo)</li>\n<li>Guarda el documento HTML</li>\n<li>Abre el documento HTML en un navegador como Chrome</li>\n</ol>\n<p>Aquí el video:</p>\n<p><div class=\"iframe-container\"><iframe width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/QP9FF9eoh-k?autoplay=0\" frameborder=\"0\" gesture=\"media\" allow=\"encrypted-media\" allowfullscreen=\"true\"></iframe></div></p>\n<h2 id=\"etiquetas-y-elementos-html\">Etiquetas y elementos HTML</h2>\n<p>Los documentos HTML se componen de <code>elementos</code>. Salvo algunas excepciones (por\nejemplo <code>&lt;!DOCTYPE html&gt;</code>), los elementos comienzan con una <code>etiqueta de inicio</code>\ny terminan con una <code>etiqueta de fin</code>. Por ejemplo, en nuestro documento tenemos\nel elemento <code>p</code>, que comienza con la etiqueta de inicio <code>&lt;p&gt;</code> y termina con la\netiqueta de finalización <code>&lt;/p&gt;</code>. El texto que se encuentra entre las etiquetas\nde apertura y de cierre es el <em>contenido</em> del elemento.</p>\n<blockquote>\n<p>El elemento <code>p</code> (párrafo) como ejemplo:\n<img src=\"https://user-images.githubusercontent.com/25912510/35747217-7bb85acc-0817-11e8-9248-5b00951cf963.png\" alt=\"Ejemplo etiqueta\"></p>\n</blockquote>\n<p>Hagamos un recorrido por todos los elementos de nuestro documento:</p>\n<ol>\n<li>El documento empieza con la etiqueta <code>&lt;!DOCTYPE html&gt;</code> (que como vimos, no\ntiene inicio o cierre). Su función es hacerle saber al navegador que\ninterprete el documento como HTML <em>moderno</em>, en contraposición a varios\ndialectos que estaban en uso en el pasado.</li>\n<li>Luego viene la etiqueta de apertura <code>&lt;html&gt;</code> (la etiqueta de cierre\n<code>&lt;/ html&gt;</code> está al final). Por estándar, todos los documentos HTML deben\ntener un elemento <code>html</code> que \"englobe\" todo lo demás.</li>\n<li>Dentro del elemento <code>html</code> hay dos elementos: el <code>head</code> (cabeza en Español) y\nel <code>body</code> (cuerpo en Español). El <code>head</code> contiene información <em>sobre</em> el\ndocumento, y el <code>body</code> contiene el documento en sí.</li>\n<li>Dentro del elemento <code>head</code> está el elemento <code>title</code> (con su etiqueta de\ninicio y de cierre), que contiene el título del documento. Es por eso que al\nvisualizar el archivo en el navegador, el título en la pestaña del navegador\ndice: \"Mi primera web\". Es importante que notemos que el elemento <code>title</code>\nestá <em>contenido</em> dentro del elemento <code>head</code>; el cual, a su vez, está\n<em>contenido</em> dentro del elemento <code>html</code>.</li>\n<li>Finalmente, tenemos el elemento <code>body</code> (entre su etiqueta de inicio y de\ncierre) que <em>contiene</em> el contenido que se mostrará en el navegador. En este\ncaso, dentro del body tenemos dos elementos adicionales: el <code>h1</code> (encabezado)\ny el <code>p</code> (párrafo).</li>\n</ol>\n<!--\nUna manera de visualizar este concepto de \"encapsulado\" donde unos elementos\n\"contienen\" a otros es a través de este gráfico:\n\n![HTML Jerarquía](http://apprize.info/javascript/kids/kids.files/image057.jpg)\n-->\n\n<p>Existen muchos más elementos y etiquetas HTML, que aprenderás en su momento. Por\nel momento, es hora de regresar a JavaScript.</p>\n<!-- ## HTML + CSS\nAgrega estilos con CSS\n-->\n\n<h2 id=\"html-y-javascript\">HTML y JavaScript</h2>\n<p>Es importante que entiendas que HTML <em><strong>no</strong></em> es un <code>lenguaje de programación</code>;\nes un <code>lenguaje de marcado de texto</code>. Como hemos visto, con HTML le damos una\nestructura a nuestra página. Sin embargo, si queremos darle <em>comportamiento</em> o\n<em>interacción</em> a nuestra web, necesitamos usar un <code>lenguaje de programación</code>. Y\nel <strong>único lenguaje de programación para correr en los navegadores web es\nJavaScript</strong>. Con JavaScript logramos que las páginas web puedan responder a las\nacciones de usuario, volviéndolas interactivas.</p>\n<p>Para incluir JavaScript en un documento HTML puedes utilizar el elemento\n<code>script</code> y colocar tu código JavaScript entre sus etiquetas de inicio\n(<code>&lt;script&gt;</code>) y cierre (<code>&lt;/script&gt;</code>), tal como lo muestra\nel siguiente ejemplo:</p>\n<pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Mi primera web&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;¡Hola Mundo!&lt;/h1&gt;\n    &lt;p&gt;Esta es mi primera web&lt;/p&gt;\n\n    &lt;script&gt;\n      alert('¡Hola Mundo!');\n    &lt;/script&gt;\n\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>Muchas veces tu código JavaScript es tan extenso que no quieres que esté ubicado\nen el mismo documento HTML. Para eso, la solución es crear un nuevo documento,\nesta vez de formato JavaScript - utilizando la extensión <code>.js</code> - y \"linkear\"\nambos documentos a través del mismo elemento <code>script</code>, de la siguiente manera:</p>\n<pre><code class=\"language-html\">&lt;script src=\"nombre-del-documento.js\"&gt;&lt;/script&gt;\n</code></pre>\n<p>El mismo elemento <code>script</code> tiene un \"atributo\" llamado <code>src</code> (de source, que\nsignifica fuente en inglés), al cual se le puede asignar la ruta de tu\ndocumento JavaScript.</p>\n<h2 id=\"añádele-interacción-a-tu-web\">Añádele interacción a tu web</h2>\n<p>¡Ahora te toca a tí! Continúa con Michelle siguiendo los pasos para agregarle\ninteracción a tu sitio web:</p>\n<p>Los pasos a seguir son:</p>\n<ol>\n<li>Agrega el elemento <code>script</code> al final del <code>body</code> de tu documento HTML</li>\n<li>Dentro del mismo HTML, entre las etiquetas de inicio y cierre del elemento\n<code>script</code>, escribe una línea de código JavaScript (por ejemplo, algo con\n<code>alert()</code>, <code>document.write()</code> o <code>prompt()</code>)</li>\n<li>Guarda tu documento HTML</li>\n<li>Refresca la página de tu navegador donde estás viendo tu documento HTML</li>\n<li>Ahora crea un nuevo documento llamado <code>app.js</code> en la misma carpeta donde está\ntu HTML</li>\n<li>Añádele el atributo <code>src</code> al elemento <code>script</code> con la ruta de tu archivo\n<code>app.js</code></li>\n<li>Pasa todo el código JavaScript del documento HTML al documento JS</li>\n<li>Refresca la página del navegador y confirma que todo funciona exactamente\nigual que antes</li>\n</ol>\n<p>Aquí el video de Michelle:</p>\n<p><div class=\"iframe-container\"><iframe width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/SSiWsDoK4GE?autoplay=0\" frameborder=\"0\" gesture=\"media\" allow=\"encrypted-media\" allowfullscreen=\"true\"></iframe></div></p>\n<!--\n## Sube tu página a GitHub Pages\n\ny deplegándola en [GitHub Pages](https://pages.github.com/)\n-->\n",
          "order": 1,
          "durationString": "20min"
        },
        "02-closing": {
          "title": "Closing",
          "type": "read",
          "format": "self-paced",
          "duration": 120,
          "body": "<h2 id=\"responde-las-preguntas-del-opening\">Responde las preguntas del opening</h2>\n<ul>\n<li>¿Cuál es la estructura básica (elementos principales) de un archivo <code>html</code>?</li>\n<li>¿Cómo vinculas tu <code>html</code> con tu <code>js</code>?\n¿Qué convenciones debes seguir al hacer esto? ¿Por qué?</li>\n<li>¿Por qué se dice que el <code>html</code> es anidado? Haz un dibujo</li>\n<li>Piensa en un par de ejemplos de buenas prácticas de código <code>html</code></li>\n</ul>\n",
          "order": 2,
          "durationString": "2h"
        }
      },
      "order": 0,
      "stats": {
        "duration": 155,
        "durationString": "2.6h",
        "exerciseCount": 0,
        "partCount": 3
      }
    },
    "02-html5": {
      "title": "HTML5",
      "bonus": false,
      "description": "<p>Conocerás las nuevas etiquetas de HTML5 que gracias a su semántica podemos\nestructurar expresivamente una página web. También aprenderás sobre los\nformularios.</p>\n",
      "parts": {
        "00-opening": {
          "title": "Opening",
          "type": "read",
          "format": "self-paced",
          "duration": 5,
          "body": "<h2 id=\"objetivos-de-aprendizaje\">Objetivos de Aprendizaje</h2>\n<ul>\n<li>Qué es HTML5 y su semántica</li>\n<li>Conocerás las etiquetas más comunes de HTML5</li>\n<li>Crearás un formulario</li>\n</ul>\n<h2 id=\"guía-de-preguntas-y-conceptos-clave\">Guía de preguntas y conceptos clave</h2>\n<p>A continuación te presentamos una serie de preguntas que debes ser capaz de\nresponder al terminar esta unidad. Utiliza estas preguntas como guía para\norientar tus esfuerzos de aprendizaje. Regresa a ellas constantemente a\nmedida que avanzas para validar que estás avanzando en la dirección correcta.\nQue te sirva como un \"checklist\" que vas marcando a medida que vas progresando.</p>\n<ul>\n<li>¿Qué es HTML5?</li>\n<li>¿Para qué nos ayuda la semántica de HTML5?</li>\n<li>¿Cuáles son las nuevas etiquetas de HTML5 más comunes?</li>\n<li>¿Cuáles son etiquetas para crear un formulario?</li>\n</ul>\n",
          "order": 0,
          "durationString": "5min"
        },
        "01-markup": {
          "title": "HTML",
          "type": "read",
          "format": "self-paced",
          "duration": 60,
          "embeds": [
            {
              "type": "video",
              "provider": "youtube",
              "href": "https://www.youtube.com/watch?v=9w5ITAr2hlQ",
              "id": "9w5ITAr2hlQ"
            }
          ],
          "body": "<h2 id=\"objetivos-de-aprendizaje\">Objetivos de Aprendizaje</h2>\n<ul>\n<li>Conocer los elementos HTML más comunes</li>\n<li>Entender el concepto de anidamiento HTML</li>\n<li>Conocer las diferencias en el comportamiento bloque y en línea de elementos\nHTML</li>\n<li>Conocer qué son y para qué sirven los atributos de elementos HTML</li>\n</ul>\n<h2 id=\"veamos-qué-es-html\">Veamos qué es HTML</h2>\n<p>Anteriormente aprendiste a crear un archivo HTML y a vincularlo con tu archivo\nJavaScript. En esta lectura profundizaremos más en HTML.</p>\n<p>Revisando directamente la documentación del <a href=\"https://developer.mozilla.org/es/docs/Learn/HTML/Introduccion_a_HTML/iniciar\" target=\"_blank\">Mozilla Developer Network</a>\ntenemos lo siguiente:</p>\n<blockquote>\n<p>HTML (HyperText Markup Language) <strong>no</strong> es un lenguaje de programación, es un\nlenguaje de marcado, usado para decirle a tu navegador cómo estructurar las\npáginas que visitas. Puede ser tan complejo o tan simple como desee el\ndesarollador web.</p>\n<p>HTML consiste en una serie de elementos, que puedes utilizar para encerrar,\nenvolver, o marcar partes diferentes del contenido para hacer que aparezcan de\nuna cierta manera, o actúen de determinada forma. Las etiquetas que envuelven\nun trozo de contenido pueden hacer que dicho contenido enlace con otra página,\nponga una palabra en cursiva, etcétera.</p>\n</blockquote>\n<h2 id=\"html5\">HTML5</h2>\n<p>HTML5 es la última versión de HTML. El término representa dos conceptos\ndiferentes:</p>\n<ul>\n<li>Se trata de una nueva versión de HTML, con nuevos elementos, atributos y\ncomportamientos.</li>\n<li>Contiene un conjunto más amplio de tecnologías que permite a los sitios Web\ny a las aplicaciones ser más diversas y de gran alcance. A este conjunto se\nle llama <em>HTML5 y amigos</em>, a menudo reducido a <strong>HTML5</strong>.</li>\n</ul>\n<p>Diseñado para ser utilizable por todos los desarrolladores de Open Web, esta\npágina referencía numerosos recursos sobre las tecnologías de HTML5,\nclasificados en varios grupos según su función.</p>\n<ul>\n<li><strong>Semántica:</strong> Permite describir con mayor precisión cual es su contenido.</li>\n<li><strong>Conectividad:</strong> Permite comunicarse con el servidor de formas nuevas e\ninnovadoras.</li>\n<li><strong>Sin conexión y almacenamiento:</strong> Permite a las páginas web almacenar datos\nlocalmente en el lado del cliente y operar sin conexión de manera más eficiente.</li>\n<li><strong>Multimedia:</strong> Nos otorga un excelente soporte para utilizar contenido\nmultimedia como lo son audio y video nativamente.</li>\n<li><strong>Gráficos y efectos 2D/3D:</strong> Proporciona una amplia gama de nuevas\ncaracterísticas que se ocupan de los gráficos en la web como lo son canvas\n2D, WebGL, SVG, etc.</li>\n<li><strong>Rendimiento e Integración:</strong> Proporciona una mayor optimización de la\nvelocidad y un mejor uso del hardware.</li>\n<li><strong>Acceso al dispositivo:</strong> Proporciona APIs para el uso de varios\ncompomentes internos de entrada y salida de nuestro dispositivo.</li>\n<li><strong>CSS3:</strong> Nos ofrece una nueva gran variedad de opciones para hacer diseños\nmás sofisticados.</li>\n</ul>\n<blockquote>\n<p>Este es un <a href=\"https://developer.mozilla.org/es/docs/HTML/HTML5\" target=\"_blank\">extracto de la documentación de MDN</a>\nque podemos encontrar sobre HTML5.</p>\n</blockquote>\n<h2 id=\"anatomía-de-un-elemento-html\">Anatomía de un elemento HTML</h2>\n<p>Recordemos que salvo algunas excepciones (por ejemplo <code>&lt;!DOCTYPE html&gt;</code>), los\nelementos html comienzan con una <code>etiqueta de apertura (o inicio)</code> y terminan\ncon una <code>etiqueta de cierre (o fin)</code>. Por ejemplo, el elemento <code>p</code> comienza\ncon la etiqueta de inicio <code>&lt;p&gt;</code> y termina con la etiqueta de cierre <code>&lt;/p&gt;</code>. El\ntexto que se encuentra entre las etiquetas de apertura y de cierre es el\n <em>contenido</em> del elemento.</p>\n<p><img src=\"https://user-images.githubusercontent.com/25906896/39716065-df4e7158-51f4-11e8-9a4c-90f1e82bcd09.png\" alt=\"Ejemplo etiqueta\"></p>\n<h2 id=\"anidamiento-html\">Anidamiento HTML</h2>\n<p>Un elemento puede contener en su contenido otros elementos o etiquetas HTML.\nEsto se llama <em>anidamiento</em>.</p>\n<p>Recordemos la estructura básica de un documento html que hemos venido usando\nen la mayoría de nuestros ejercicios y agreguemos un par de elementos\nadicionales:</p>\n<pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;HTML anidado&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Laboratoria&lt;/h1&gt;\n    &lt;p&gt;Código &lt;em&gt;que&lt;/em&gt; &lt;strong&gt;transforma&lt;/strong&gt;&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>Fíjate cómo ciertos elementos \"anidan\" otros. Es decir, algunos\nelementos están \"contenidos\" dentro de otros. Por ejemplo, el elemento <code>body</code>\ntiene dos elementos anidados (o hijos) que son el título <code>h1</code> y el\npárrafo <code>p</code>. A su vez, el párrafo <code>p</code> contiene dos elementos adicionales\n(otros hijos): <code>em</code> y <code>strong</code>.</p>\n<p>Podemos visualizar este concepto de <em>anidamiento</em> html de la siguiente manera:</p>\n<p><img src=\"http://www.mrinitialman.com/Library/HTML/Pictures/HTML-Markup_Basics/html_nesting.png\" alt=\"Anidamiento html\"></p>\n<p>En este ejemplo vemos elementos que ya deberían ser familiares para ti. Ya\nconoces sobre la etiqueta <code>DOCTYPE</code>, los elementos <code>head</code>, <code>body</code>, <code>title</code>, <code>h1</code>\ny <code>p</code>. Un par de elementos adicionales que hemos añandido son: <code>em</code> que hace que\nsu contenido se visualice como texto en <em>cursiva</em> y <code>strong</code> que hace que su\ncontenido se visualice como texto en <em>negrita</em>.</p>\n<p>Al abrir este documento en el navegador tendremos lo siguiente:</p>\n<p><img src=\"https://user-images.githubusercontent.com/25906896/39716135-1c508578-51f5-11e8-97e4-074490066dac.png\" alt=\"HTML nested\"></p>\n<h2 id=\"elementos-bloque-vs-en-línea\">Elementos bloque vs. en línea</h2>\n<p>Regresemos a la lectura de HTML del <a href=\"https://developer.mozilla.org/es/docs/Learn/HTML/Introduccion_a_HTML/iniciar\" target=\"_blank\">Mozilla Developer Network</a>.\nNos dice:</p>\n<blockquote>\n<p>Existen dos importantes categorías de elementos en HTML: elementos a nivel de\nbloque y elementos en línea.</p>\n<p><strong>Los elementos a nivel de bloque</strong> forman un bloque visible en una página —\naparecerán en una nueva línea de cualquier contenido que haya venido antes,\ny cualquier contenido que venga después también aparecerá en una nueva línea.\nLos elementos a nivel de bloque tienden a ser elementos estructurales en la\npágina que representan por ejemplo párrafos, listas, menús de navegación,\npies de página, etc. Un elemento a nivel de bloque no estaría anidado dentro\nde un elemento en línea, pero podría estar anidado dentro de otro elemento\na nivel de bloque.</p>\n<p><strong>Los elementos en línea</strong> son aquellos que están contenidos dentro de\nelementos a nivel de bloque y rodean solo pequeñas partes del contenido\ndel documento, no párrafos enteros ni agrupaciones de contenido. Un elemento\nen línea no causará que una nueva línea aparezca en el documento:\nnormalmente aparecen dentro de un párrafo o texto, por ejemplo elementos de\nénfasis como <code>em</code> o <code>strong</code>.</p>\n</blockquote>\n<p>Veamos un ejemplo:</p>\n<pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;HTML anidado&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;em&gt;primero&lt;/em&gt;&lt;strong&gt;segundo&lt;/strong&gt;&lt;em&gt;tercero&lt;/em&gt;\n    &lt;p&gt;cuarto&lt;/p&gt;&lt;p&gt;quinto&lt;/p&gt;&lt;p&gt;sexto&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>Al visualizar el documento anterior en el navegador tendremos:</p>\n<p><img src=\"https://user-images.githubusercontent.com/25906896/39716266-7376cd4e-51f5-11e8-9169-229c007eaacb.png\" alt=\"Block vs in line\"></p>\n<p>Tanto <code>em</code> como <code>strong</code> son elementos en línea. Por lo tanto, los tres\nprimeros elementos se sitúan en la misma línea uno tras otros sin espacio\nentre ellos. Por otro lado, <code>p</code> es un elemento a nivel de bloque, así que\ncada elemento aparece en una nueva línea, con espacio sobre y debajo de\ncada <code>p</code>.</p>\n<h2 id=\"elementos-html\">Elementos HTML</h2>\n<p>Tienes a tu disposición múltiples elementos HTML para construir productos en\nla web. Investiga por tu cuenta (utilizando tu gran aliado Google) y aprende\ncómo agregar lo siguiente a una web:</p>\n<ol>\n<li>Encabezados para títulos y subtítulos (tip: headings)</li>\n<li>Un link</li>\n<li>Una tabla</li>\n<li>Una lista</li>\n<li>Una imagen</li>\n<li>Una línea divisoria (tip: horizontal rule)</li>\n<li>Una cita</li>\n<li>Resaltar un texto (tip: mark)</li>\n</ol>\n<p>Para cada elemento anterior entiende si se comporta como <code>inline</code> o como\n<code>block</code>.</p>\n<h2 id=\"atributos\">Atributos</h2>\n<p>En tu investigación seguro te topaste con\n<a href=\"https://developer.mozilla.org/es/docs/Web/HTML/Elemento/a\" target=\"_blank\">el elemento <code>a</code> para agregar un link a tu web:</a>\ny habrás notado que en la etiqueta de apertura aparece una serie de información:</p>\n<pre><code class=\"language-html\">&lt;a href=\"http://laboratoria.la/\" target=\"_blank\" title=\"Página de inicio de Laboratoria\"&gt;Ir a Laboratoria&lt;/a&gt;\n</code></pre>\n<p>Esa información son <strong>atributos</strong>. Los atributos nos dan información adicional\nsobre el contenido de un elemento que no queremos que aparezca en el\ncontenido actual. En algunos casos agregan características\ny/o comportamiento a tu elemento HTML. Los atributos aparencen en la\n<strong>etiqueta de apertura</strong> del elemento y consisten de dos partes: un nombre\ny un valor, separados por un signo de igual (<code>=</code>).</p>\n<p>En el caso del ejemplo anterior, podemos visualizar tres\natributos: el atributo <code>href</code>, el atributo <code>target</code> y el atributo <code>title</code>.</p>\n<ul>\n<li><p>El atributo <code>href</code> especifica la dirección web que quieres que el enlace\napunte; es decir, donde el navegador navega cuando se le hace clic. En este\nejemplo vemos que apunta a la página de inicio de Laboratoria:\n<a href=\"http://laboratoria.la/\" target=\"_blank\">http://laboratoria.la/</a></p>\n</li>\n<li><p>El atributo <code>target</code> especifica el contexto de navegación que será usado\npara mostrar el enlace. Por ejemplo, <code>target=\"_blank\"</code> mostrará el enlace en\nuna nueva pestaña. Si quieres mostrar el enlace en la pestaña actual solo\nomite este atributo.</p>\n</li>\n<li><p>El atributo <code>title</code> especifica información extra sobre el enlace, como qué\npágina es la que estás enlazando. En nuestro ejemplo dice \"Página de inicio\nde Laboratoria\". Esto aparecera como información cuando se pase el mouse\npor encima del link.</p>\n</li>\n</ul>\n<h2 id=\"atributo-style\">Atributo style</h2>\n<p>Existen muchos atributos comunes a todos los elementos html y existen atributos\nespecíficos que son asociados a un elemento en particular. Un atributo que\naplica a casi todos los elementos html es el atributo <code>style</code> lo cual\npermite darle estilos a tu elemento. Por ejemplo, si queremos que el contenido\ndentro de un elemento <code>p</code> sea de color rojo sobre fondo amarillo y con un borde\nnegro, hacemos:</p>\n<pre><code class=\"language-html\">&lt;p style=\"color:red; background-color: yellow; border: 1px solid black;\"&gt;Código\n  &lt;em&gt;que&lt;/em&gt;\n  &lt;strong&gt;transforma&lt;/strong&gt;\n&lt;/p&gt;\n</code></pre>\n<p>Al visualizar el documento anterior en el navegador tendremos:</p>\n<p><img src=\"https://user-images.githubusercontent.com/25906896/39716433-f7d20fa4-51f5-11e8-820d-79dca1dbd781.png\" alt=\"Style Example\"></p>\n<p>Un atributo de estilo puede contener una o más declaraciones. Cada declaración\nestá compuesta por una\n<strong>propiedad</strong> (como el color) seguida de dos puntos y un <strong>valor</strong>\n(como rojo). Cuando tenemos más de una declaración, cada una debe estar\nseparada por punto y coma (<code>;</code>). Por ejemplo: <code>\"color:red; background-color: yellow;\"</code>.</p>\n<p>Hay un montón de aspectos que pueden ser influenciados por el estilo. Por\nejemplo, la propiedad <code>display</code> controla si un elemento se muestra como un\nbloque o en línea, o inclusive no mostrarlo:</p>\n<pre><code class=\"language-html\">&lt;p&gt;\n  Un texto se puede mostrar &lt;strong&gt;en línea&lt;/strong&gt;,\n  &lt;strong style=\"display: block\"&gt;como bloque&lt;/strong&gt;, y\n  &lt;strong style=\"display: none\"&gt;no visualizarse&lt;/strong&gt;.\n&lt;/p&gt;\n</code></pre>\n<p>La vista en el navegador de esto sería:</p>\n<p><img src=\"https://user-images.githubusercontent.com/25906896/39716464-0fad0926-51f6-11e8-8ad6-011543112229.png\" alt=\"Style Example\"></p>\n<p>El texto <em>\"en línea\"</em> se muestra inline (es decir, en la misma línea del texto\nanterior <em>\"Un texto se puede mostrar\"</em>) porque recordemos que el elemento strong\nes de tipo inline. El texto <em>\"como bloque\"</em> terminará en su propia línea, ya que\nlos elementos de tipo bloque no se muestran en línea con el texto que los\nrodea. Recuerda que cuando un elemento es de tipo bloque aparecerá en una\nnueva línea de cualquier contenido que haya venido antes,\ny cualquier contenido que venga después también aparecerá en una nueva\nlínea. El texto <em>\"no visualizarse\"</em> no se muestra porque al asignar el valor de\n<code>none</code> para <code>display</code> impide que un elemento aparezca en la pantalla. Esta es\nuna forma de ocultar elementos.</p>\n<h2 id=\"etiquetas-vacías\">Etiquetas vacías</h2>\n<p>En tu investigación seguro también te topaste con\n<a href=\"https://developer.mozilla.org/es/docs/Web/HTML/Elemento/img\" target=\"_blank\">el elemento <code>&lt;img&gt;</code> para agregar una imagen a tu web</a>\ny habrás notado que no tiene una etiqueta de cierre y, por lo tanto, no tiene\n\"contenido\":</p>\n<pre><code class=\"language-html\">&lt;img src=\"http://cde.2.trome.pe/ima/0/1/1/8/5/1185397.jpg\"&gt;\n</code></pre>\n<p>Algunas etiquetas no tienen directamente contenido; más bien reciben una <em>fuente</em>\nde la cual obtener el contenido. Esto es lo que sucede con\nel elemento <code>img</code>. El atributo <code>src</code> brinda la ruta del contenido. En este caso,\nal ir a la ruta <a href=\"http://cde.2.trome.pe/ima/0/1/1/8/5/1185397.jpg\" target=\"_blank\">http://cde.2.trome.pe/ima/0/1/1/8/5/1185397.jpg</a> encontraremos\nla foto de Mariana con Mark y Barack :)</p>\n<p><img src=\"http://cde.2.trome.pe/ima/0/1/1/8/5/1185397.jpg\" alt=\"Foto Mari\"></p>\n<p>Otro elemento que no tiene etiqueta de cierre es <code>br</code>. <a href=\"https://developer.mozilla.org/es/docs/Web/HTML/Elemento/br\" target=\"_blank\">Lee la documentación\nde MDN sobre <code>br</code></a>.\n¿Para qué sirve <code>br</code>?</p>\n<h2 id=\"comentarios-en-html\">Comentarios en HTML</h2>\n<p>Así como podemos comentar nuestro código <code>javascript</code> para hacerlo más\nentendible, también podemos agregar comentarios a nuestro código <code>html</code>.\nPara definir un comentario en un archivo html, usamos las etiquetas <code>&lt;!--</code> para\narbrir el comentario y <code>--&gt;</code> para cerrarlo.</p>\n<pre><code class=\"language-html\">&lt;!-- Esto es un comentario. No se verá en la web, pero sí en mi código. --&gt;\n</code></pre>\n<h2 id=\"replicando-la-página-de-grace-hopper-de-wikipedia\">Replicando la página de Grace Hopper de wikipedia</h2>\n<p>Ahora que tienes una idea de los elementos <code>html</code> más comunes, su\ncomportamiento (inline vs block) y sus atributos principales, Michelle te\nexplicará cómo construir una réplica de la página de <a href=\"https://en.wikipedia.org/wiki/Grace_Hopper\" target=\"_blank\">Grace Hopper de wikipedia</a>:</p>\n<p><div class=\"iframe-container\"><iframe width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/9w5ITAr2hlQ?autoplay=0\" frameborder=\"0\" gesture=\"media\" allow=\"encrypted-media\" allowfullscreen=\"true\"></iframe></div></p>\n<h2 id=\"los-elementos-div-y-span\">Los elementos <code>div</code> y <code>span</code></h2>\n<p>Muchas veces al crear nuestra estructura HTML se vuelve necesario \"agrupar\"\nelementos para dividir nuestra web en secciones o partes lógicas. Por ejemplo,\nsi en el <em>footer</em> (o pie de página) de nuestra web queremos mostrar los íconos\nde nuestras redes sociales junto a links de contacto, es útil agrupar todos\nlos íconos en una sección y los links en otra sección, y que ambos grupos estén\ncontenidos dentro del <em>footer</em>.</p>\n<p>Para realizar estas agrupaciones, podemos utilizar los elementos <code>div</code> y\n<code>span</code>. Los elementos <code>div</code> y <code>span</code> son como \"contenedores\" vacíos que\nllenamos de otros elementos y contenido.</p>\n<ul>\n<li><p>El elemento <code>div</code> define una división o una sección en un documento\nHTML. Se utiliza para agrupar elementos de <strong>bloque</strong>. Frecuentemente se\nutiliza como un contenedor para otros elementos. Un <code>div</code> es un bloque, lo\nque significa que tiene un salto de línea antes y después.</p>\n</li>\n<li><p>El elemento <code>span</code> se utiliza como un contenedor para textos. Es de\ntipo <strong>inline</strong>; es decir, aparece entre líneas, como parte de un párrafo.</p>\n</li>\n</ul>\n<p>Veamos un ejemplo:</p>\n<pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;body&gt;\n    &lt;div style=\"background-color: green; color: white\"&gt;\n      &lt;h2&gt;Ciudad de México&lt;/h2&gt;\n      &lt;p&gt;La Ciudad de México, anteriormente conocida como el Distrito Federal,\n        es una de las 32 entidades federativas de México, así como la capital\n        de los &lt;span style =\"color: yellow\"&gt;Estados Unidos Mexicanos&lt;/span&gt;.\n      &lt;/p&gt;\n    &lt;/div&gt;\n    &lt;div style=\"background-color: red; color: white\"&gt;\n      &lt;h2&gt;Lima&lt;/h2&gt;\n      &lt;p&gt;Lima es la capital de la &lt;span style =\"color: yellow\"&gt;República del\n        Perú&lt;/span&gt; y de la provincia homónima. Se sitúa en la costa central\n        del país, a orillas del océano Pacífico, conformando una extensa y\n        populosa área urbana conocida como Lima Metropolitana, flanqueada por\n        el desierto costero y extendida sobre los valles de los ríos Chillón,\n        Rímac y Lurín.\n      &lt;/p&gt;\n    &lt;/div&gt;\n    &lt;div style=\"background-color: blue; color: white\"&gt;\n      &lt;h2&gt;Santiago&lt;/h2&gt;\n      &lt;p&gt;Santiago, llamada también Santiago de Chile, es la capital de\n        &lt;span style =\"color: yellow\"&gt;Chile&lt;/span&gt; y de la región Metropolitana\n        de Santiago. Es el principal núcleo urbano del país y su área\n        metropolitana se conoce también con el nombre de Gran Santiago.\n      &lt;/p&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>Al visualizar el ejemplo anterior en el navegador tenemos:</p>\n<p><img src=\"https://user-images.githubusercontent.com/25906896/39716525-376456d6-51f6-11e8-8ade-2f9cb65a0ea1.png\" alt=\"Div and Span\"></p>\n<p>Fíjate cómo hemos agrupado todo lo relacionado a un país en un <code>div</code>. Esto es\nútil porque crea secciones que siguen un orden lógico. Pero, más importante\naún, tener estas secciones separadas permite darle estilos diferentes a cada\nsección: el color de fondo y el color de la fuente varían para cada\npaís. Lo mismo sucede con las palabras que mostramos en amarillo. Gracias a <code>span</code>\npodemos hacer que ciertos pedazos de texto tengan un estilo diferente.</p>\n",
          "order": 1,
          "durationString": "1h"
        },
        "02-semantic-html": {
          "title": "HTML Semántico",
          "type": "read",
          "format": "self-paced",
          "duration": 60,
          "body": "<h2 id=\"objetivos-de-aprendizaje\">Objetivos de Aprendizaje</h2>\n<ul>\n<li>Conocer elementos HTML semánticos</li>\n</ul>\n<h2 id=\"html-semántico\">HTML semántico</h2>\n<p>Como hemos visto, los <code>div</code> son un excelente recurso para agrupar contenido de\nforma lógica y con ello poder darle estilos particulares a ciertas secciones.\nPor muchos años se ha desarrollado usando a los <code>div</code> como único recurso para\nagrupar contenido. Sin embargo, muchas web tienden a tener una estructura\nsimilar y a contener elementos comunes. Por ejemplo, casi todos los productos\nen la web tienen una cabecera, un menú de navegación, un contenido principal,\ncontenido secundario, un footer, etc.</p>\n<p>Revisando la documentación del MDN sobre\n<a href=\"https://developer.mozilla.org/es/docs/Learn/HTML/Introduccion_a_HTML/estructura\" target=\"_blank\">estructura web y documentación</a>\npodemos extraer:</p>\n<blockquote>\n<p>En nuestro código HTML, podemos crear secciones de contenido basadas en su\nfuncionalidad — usando elementos que representen las diferentes secciones del\ncontenido descritas anteriormente sin ambigüedad, de forma que las tecnologías\nde ayuda y los lectores de pantalla puedan reconocer esos elementos y asistir\nen tareas como \"encontrar el menú de navegación\", o \"encontrar el contenido\nprincipal\".</p>\n</blockquote>\n<p>En la siguiente imagen vemos como era el uso de HTML antes, como se puede\nobservar hay muchos <code>&lt;div&gt;</code>. Ahora gracias a la semántica de HTML 5 podemos\nusar nuevas etiquetas para estructurar correctamente una página web.</p>\n<p><img src=\"https://user-images.githubusercontent.com/25906896/39723171-9ba63272-520a-11e8-9603-d57dec4af61c.png\" alt=\"html antes y ahora\"></p>\n<p>Para implementar estas secciones semánticas, HTML dispone de etiquetas adecuadas\nque podemos usar para representar estas secciones. Revisa el link anterior e\ninvestiga el uso de los siguientes elementos semánticos:</p>\n<ul>\n<li><code>&lt;header&gt;</code></li>\n<li><code>&lt;nav&gt;</code></li>\n<li><code>&lt;main&gt;</code></li>\n<li><code>&lt;aside&gt;</code></li>\n<li><code>&lt;article&gt;</code></li>\n<li><code>&lt;section&gt;</code></li>\n<li><code>&lt;figure&gt;</code></li>\n<li><code>&lt;footer&gt;</code></li>\n</ul>\n",
          "order": 2,
          "durationString": "1h"
        },
        "03-forms": {
          "title": "Formularios",
          "type": "read",
          "format": "self-paced",
          "duration": 60,
          "body": "<h2 id=\"objetivos-de-aprendizaje\">Objetivos de Aprendizaje</h2>\n<p>En esta lectura aprenderemos:</p>\n<ul>\n<li>Qué son los formularios en HTML</li>\n<li>Aprenderás los principales elementos de un formulario</li>\n<li>Conocerás los atributos de los elementos de un formulario</li>\n</ul>\n<h2 id=\"veamos-qué-son-los-formularios\">Veamos qué son los formularios</h2>\n<p>Los formularios son una forma sencilla de solicitar información al usuario en\nuna página web, permitiendo que el usuario ingrese información. Los formularios\nson uno de los puntos principales de interacción entre un usuario y un sitio web\no aplicación.</p>\n<h2 id=\"guía-de-conceptos-clave\">Guía de conceptos clave</h2>\n<p>Revisemos la documentación del MDN sobre\n<a href=\"https://developer.mozilla.org/es/docs/Web/HTML/Elemento/form\" target=\"_blank\">formularios</a>,\nademás tenemos la Zona de Aprendizaje de MDN donde podrás aprender a más\ndetalle sobre <a href=\"https://developer.mozilla.org/es/docs/Learn/HTML/Forms\" target=\"_blank\">los forms</a>.</p>\n<p>Ahora que conocemos los elementos para realizar un formulario, crearemos uno.\nManos a la obra!!</p>\n<ol>\n<li><p>Crea un archivo con el nombre <code>index.html</code> y agrega la etiqueta <code>form</code> para\nque empieces con tu formulario.</p>\n</li>\n<li><p>Luego agregarás un <code>input</code> donde el usuario ingresará su correo electrónico,\neste campo será obligatorio.</p>\n<blockquote>\n<p>Recuerda colocar que tipo de <code>input</code> es y los atributos necesarios (no te\nolvides usar el atributo <code>required</code> para considerar un input obligatorio)</p>\n</blockquote>\n<pre><code class=\"language-html\">&lt;form&gt;\n  &lt;input\n    type=\"email\"\n    id=\"email-example\"\n    placeholder=\"Email\"\n    name=\"email-example\"\n    required\n  /&gt;\n&lt;/form&gt;\n</code></pre>\n</li>\n<li><p>También agrega la etiqueta <code>label</code> para asociar el <code>input</code> que acabas de\ncrear.</p>\n<pre><code class=\"language-html\">&lt;form&gt;\n  &lt;label for=\"email-example\"&gt;Correo electrónico&lt;/label&gt;\n  &lt;input\n    type=\"email\"\n    id=\"email-example\"\n    placeholder=\"Email\"\n    name=\"email-example\"\n    required\n  /&gt;\n&lt;/form&gt;\n</code></pre>\n</li>\n<li><p>Realiza los mismos pasos para un <code>input</code> de tipo contraseña.</p>\n<pre><code class=\"language-html\">&lt;form&gt;\n  &lt;label for=\"password-example\"&gt;Password&lt;/label&gt;\n  &lt;input\n    type=\"password\"\n    id=\"password-example\"\n    placeholder=\"Password\"\n    name=\"password-example\"\n    required\n  /&gt;\n&lt;/form&gt;\n</code></pre>\n</li>\n<li><p>Ahora, crearás un <code>select</code> para que el usuario pueda elegir un valor de la\nlista desplegable.</p>\n<pre><code class=\"language-html\">&lt;select name=\"select-example\"&gt;\n  &lt;option value=\"value1\"&gt;Primera opción&lt;/option&gt;\n  &lt;option value=\"value2\" selected&gt;Segunda opción&lt;/option&gt;\n  &lt;option value=\"value3\"&gt;Tercera opción&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n</li>\n<li><p>También agrega un radiobutton donde el usuario solo puede escoger una\nopción entre las distintas opciones relacionadas que se le presentan.</p>\n<pre><code class=\"language-html\">&lt;label&gt;\n  &lt;input type=\"radio\" name=\"gender\" value=\"female\"&gt; Mujer\n&lt;/label&gt;\n&lt;label&gt;\n  &lt;input type=\"radio\" name=\"gender\" value=\"male\"&gt; Hombre\n&lt;/label&gt;\n&lt;label&gt;\n  &lt;input type=\"radio\" name=\"gender\" value=\"no-gender\"&gt; No deseo brindar información\n&lt;/label&gt;\n</code></pre>\n</li>\n<li><p>Y adicionarás un checkbox para los términos y condiciones.</p>\n<pre><code class=\"language-html\">&lt;label&gt;\n  &lt;input type=\"checkbox\" name=\"conditions\" value=\"accept-conditions\" checked /&gt;\n  Acepto los términos y condiciones\n&lt;/label&gt;\n</code></pre>\n</li>\n<li><p>Por último pondrás un botón de enviar.</p>\n<pre><code class=\"language-html\">&lt;button type=\"submit\"&gt;Enviar&lt;/button&gt;\n</code></pre>\n</li>\n</ol>\n<p>El resultado de este HTML será:</p>\n<p><img src=\"https://user-images.githubusercontent.com/25906896/39826718-2daeff3e-537b-11e8-8d60-bba02479bf16.png\" alt=\"ejemplo de formularios\"></p>\n<p>Ahora está en tus manos colocarle los estilos que desees en tu <code>css</code></p>\n<p>Ahora, si deseas aprender como trabajamos con los forms desde javascript podemos\nver el <a href=\"http://librosweb.es/libro/javascript/capitulo_7.html\" target=\"_blank\">capítulo 7 de javascript de librosweb</a>.\nAdemás tenemos la documentación del capítulo 18 de <a href=\"https://eloquentjavascript.net/18_http.html\" target=\"_blank\">Eloquent JavaScript</a>,\nde Marijn Haverbeke, 2014.</p>\n",
          "order": 3,
          "durationString": "1h"
        },
        "04-closing": {
          "title": "Closing",
          "type": "read",
          "format": "self-paced",
          "duration": 5,
          "embeds": [
            {
              "type": "video",
              "provider": "youtube",
              "href": "https://youtu.be/RBbviZLKEG0",
              "id": "RBbviZLKEG0"
            }
          ],
          "body": "<h2 id=\"¿html5-es-la-última-versión-de-html-veamos\">¿HTML5 es la última versión de HTML? Veamos</h2>\n<p>Sí y no. Es cierto que HTML5 es la última versión de HTML, pero además engloba\nun conjunto de tecnologías que define el estándar en relación a la web, tales\ncomo CSS3 y un término que ahora escucharás muy seguido: <strong>APIs</strong>. Este último\nnos dará a conocer los superpoderes del navegador y entenderemos porqué el\nnavegador se ha potenciado mucho desde sus inicios.</p>\n<h2 id=\"dato-curioso\">Dato curioso</h2>\n<p>En realidad ya se está trabajando en el primer borrador de la revisión del\nestándar <strong>HTML5.3</strong> :scream:. En este <a href=\"https://www.w3.org/blog/2017/12/html-5-2-is-done-html-5-3-is-coming/\" target=\"_blank\">blog de la W3C</a>\npuedes encontrar información al respecto.</p>\n<p>Además, si quieres ir conociendo un poco más acerca de lo que HTML5 trae consigo,\npuedes revisar el siguiente video de nuestros amigos de Platzi, que si bien el\nvideo ya tiene varios años en internet, todavía nos puede dar una gran\nperspectiva del impacto que tuvo la llegada de este nuevo estándar.</p>\n<p><div class=\"iframe-container\"><iframe width=\"640\" height=\"360\" src=\"https://www.youtube.com/embed/RBbviZLKEG0?autoplay=0\" frameborder=\"0\" gesture=\"media\" allow=\"encrypted-media\" allowfullscreen=\"true\"></iframe></div></p>\n<h2 id=\"respondamos-las-preguntas-del-opening\">Respondamos las preguntas del opening</h2>\n<ul>\n<li>¿Qué es HTML5?</li>\n<li>¿Para qué nos ayuda la semántica de HTML5?</li>\n<li>¿Cuáles son las nuevas etiquetas de HTML5 más comunes?</li>\n</ul>\n",
          "order": 4,
          "durationString": "5min"
        }
      },
      "order": 1,
      "stats": {
        "duration": 190,
        "durationString": "3.2h",
        "exerciseCount": 0,
        "partCount": 5
      }
    }
  },
  "grades": "",
  "contributors": "",
  "books": "",
  "benchmarks": "",
  "references": "",
  "repo": "Laboratoria/bootcamp",
  "path": "topics/html",
  "version": "5.0.0",
  "parserVersion": "3.2.0",
  "track": "js",
  "locale": "es-ES",
  "stats": {
    "duration": 345,
    "durationString": "5.8h",
    "exerciseCount": 0,
    "unitCount": 2,
    "partCount": 8
  }
}
